{"ast":null,"code":"import { clamp } from \"tsparticles-engine\";\nexport function absorb(p1, p2, fps, pixelRatio) {\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      var factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n      p1.size.value += factor;\n      p2.size.value -= factor;\n      if (p2.getRadius() <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n      }\n    } else {\n      var _factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n      p1.size.value -= _factor;\n      p2.size.value += _factor;\n      if (p1.getRadius() <= pixelRatio) {\n        p1.size.value = 0;\n        p1.destroy();\n      }\n    }\n  }\n}","map":{"version":3,"names":["clamp","absorb","p1","p2","fps","pixelRatio","getRadius","undefined","destroy","factor","size","value"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js"],"sourcesContent":["import { clamp } from \"tsparticles-engine\";\nexport function absorb(p1, p2, fps, pixelRatio) {\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n            p1.size.value += factor;\n            p2.size.value -= factor;\n            if (p2.getRadius() <= pixelRatio) {\n                p2.size.value = 0;\n                p2.destroy();\n            }\n        }\n        else {\n            const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n            p1.size.value -= factor;\n            p2.size.value += factor;\n            if (p1.getRadius() <= pixelRatio) {\n                p1.size.value = 0;\n                p1.destroy();\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,oBAAoB;AAC1C,OAAO,SAASC,MAAM,CAACC,EAAE,EAAEC,EAAE,EAAEC,GAAG,EAAEC,UAAU,EAAE;EAC5C,IAAIH,EAAE,CAACI,SAAS,EAAE,KAAKC,SAAS,IAAIJ,EAAE,CAACG,SAAS,EAAE,KAAKC,SAAS,EAAE;IAC9DL,EAAE,CAACM,OAAO,EAAE;EAChB,CAAC,MACI,IAAIN,EAAE,CAACI,SAAS,EAAE,KAAKC,SAAS,IAAIJ,EAAE,CAACG,SAAS,EAAE,KAAKC,SAAS,EAAE;IACnEJ,EAAE,CAACK,OAAO,EAAE;EAChB,CAAC,MACI,IAAIN,EAAE,CAACI,SAAS,EAAE,KAAKC,SAAS,IAAIJ,EAAE,CAACG,SAAS,EAAE,KAAKC,SAAS,EAAE;IACnE,IAAIL,EAAE,CAACI,SAAS,EAAE,IAAIH,EAAE,CAACG,SAAS,EAAE,EAAE;MAClC,IAAMG,MAAM,GAAGT,KAAK,CAACE,EAAE,CAACI,SAAS,EAAE,GAAGH,EAAE,CAACG,SAAS,EAAE,EAAE,CAAC,EAAEH,EAAE,CAACG,SAAS,EAAE,CAAC,GAAGF,GAAG;MAC9EF,EAAE,CAACQ,IAAI,CAACC,KAAK,IAAIF,MAAM;MACvBN,EAAE,CAACO,IAAI,CAACC,KAAK,IAAIF,MAAM;MACvB,IAAIN,EAAE,CAACG,SAAS,EAAE,IAAID,UAAU,EAAE;QAC9BF,EAAE,CAACO,IAAI,CAACC,KAAK,GAAG,CAAC;QACjBR,EAAE,CAACK,OAAO,EAAE;MAChB;IACJ,CAAC,MACI;MACD,IAAMC,OAAM,GAAGT,KAAK,CAACG,EAAE,CAACG,SAAS,EAAE,GAAGJ,EAAE,CAACI,SAAS,EAAE,EAAE,CAAC,EAAEJ,EAAE,CAACI,SAAS,EAAE,CAAC,GAAGF,GAAG;MAC9EF,EAAE,CAACQ,IAAI,CAACC,KAAK,IAAIF,OAAM;MACvBN,EAAE,CAACO,IAAI,CAACC,KAAK,IAAIF,OAAM;MACvB,IAAIP,EAAE,CAACI,SAAS,EAAE,IAAID,UAAU,EAAE;QAC9BH,EAAE,CAACQ,IAAI,CAACC,KAAK,GAAG,CAAC;QACjBT,EAAE,CAACM,OAAO,EAAE;MAChB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module"}