{"ast":null,"code":"import _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a, _b;\n  var colorValue = value;\n  if (!colorValue || !valueAnimation.enable) {\n    return;\n  }\n  var offset = randomInRange(valueAnimation.offset),\n    velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6,\n    decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n  if (!decrease || colorValue.status === 0) {\n    colorValue.value += velocity;\n    if (decrease && colorValue.value > max) {\n      colorValue.status = 1;\n      colorValue.value -= colorValue.value % max;\n    }\n  } else {\n    colorValue.value -= velocity;\n    if (colorValue.value < 0) {\n      colorValue.status = 0;\n      colorValue.value += colorValue.value;\n    }\n  }\n  if (colorValue.velocity && decay !== 1) {\n    colorValue.velocity *= decay;\n  }\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\nfunction updateColor(particle, delta) {\n  var _a, _b, _c;\n  var animationOptions = particle.options.color.animation;\n  if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n    updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n  }\n  if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n    updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n  }\n  if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n    updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n  }\n}\nexport var ColorUpdater = /*#__PURE__*/function () {\n  function ColorUpdater(container) {\n    _classCallCheck(this, ColorUpdater);\n    this.container = container;\n  }\n  _createClass(ColorUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n      if (hslColor) {\n        particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a, _b, _c;\n      var animationOptions = particle.options.color.animation;\n      return !particle.destroyed && !particle.spawning && (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable || ((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable || ((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable);\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      updateColor(particle, delta);\n    }\n  }]);\n  return ColorUpdater;\n}();","map":{"version":3,"names":["getHslAnimationFromHsl","randomInRange","rangeColorToHsl","updateColorValue","delta","value","valueAnimation","max","decrease","_a","_b","colorValue","enable","offset","velocity","factor","decay","status","updateColor","particle","_c","animationOptions","options","color","animation","h","undefined","s","l","ColorUpdater","container","hslColor","id","reduceDuplicates","retina","reduceFactor","destroyed","spawning"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/tsparticles-updater-color/esm/ColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !valueAnimation.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n    }\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n    }\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}