{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport var Absorbers = /*#__PURE__*/function () {\n  function Absorbers(container) {\n    var _this = this;\n    _classCallCheck(this, Absorbers);\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n    container.getAbsorber = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n    container.addAbsorber = function (options, position) {\n      return _this.addAbsorber(options, position);\n    };\n  }\n  _createClass(Absorbers, [{\n    key: \"addAbsorber\",\n    value: function addAbsorber(options, position) {\n      var absorber = new AbsorberInstance(this, this.container, options, position);\n      this.array.push(absorber);\n      return absorber;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      var _iterator = _createForOfIteratorHelper(this.array),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var absorber = _step.value;\n          context.save();\n          absorber.draw(context);\n          context.restore();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var absorberOptions = this.absorbers,\n        modeAbsorbers = this.interactivityAbsorbers;\n      if (mode === \"absorber\") {\n        var absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers),\n          absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions),\n          aPosition = this.container.interactivity.mouse.clickPosition;\n        this.addAbsorber(absorbersOptions, aPosition);\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init(options) {\n      var _this2 = this;\n      var _a, _b;\n      if (!options) {\n        return;\n      }\n      this.absorbers = executeOnSingleOrMultiple(options.absorbers, function (absorber) {\n        var tmp = new Absorber();\n        tmp.load(absorber);\n        return tmp;\n      });\n      this.interactivityAbsorbers = executeOnSingleOrMultiple((_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, function (absorber) {\n        var tmp = new Absorber();\n        tmp.load(absorber);\n        return tmp;\n      });\n      executeOnSingleOrMultiple(this.absorbers, function (absorber) {\n        _this2.addAbsorber(absorber);\n      });\n    }\n  }, {\n    key: \"particleUpdate\",\n    value: function particleUpdate(particle) {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var absorber = _step2.value;\n          absorber.attract(particle);\n          if (particle.destroyed) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"removeAbsorber\",\n    value: function removeAbsorber(absorber) {\n      var index = this.array.indexOf(absorber);\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var absorber = _step3.value;\n          absorber.resize();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }]);\n  return Absorbers;\n}();","map":{"version":3,"names":["executeOnSingleOrMultiple","itemFromSingleOrMultiple","Absorber","AbsorberInstance","Absorbers","container","array","absorbers","interactivityAbsorbers","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","absorber","push","context","save","draw","restore","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","interactivity","mouse","clickPosition","_a","_b","tmp","load","modes","particle","attract","destroyed","index","indexOf","splice","resize"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js"],"sourcesContent":["import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        this.absorbers = executeOnSingleOrMultiple(options.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n        this.interactivityAbsorbers = executeOnSingleOrMultiple((_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}