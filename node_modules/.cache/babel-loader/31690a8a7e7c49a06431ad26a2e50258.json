{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nfunction copyResponse(_x, _x2) {\n  return _copyResponse.apply(this, arguments);\n}\nfunction _copyResponse() {\n  _copyResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response, modifier) {\n    var clonedResponse, responseInit, modifiedResponseInit, body;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clonedResponse = response.clone(); // Create a fresh `ResponseInit` object by cloning the headers.\n            responseInit = {\n              headers: new Headers(clonedResponse.headers),\n              status: clonedResponse.status,\n              statusText: clonedResponse.statusText\n            }; // Apply any user modifications.\n            modifiedResponseInit = modifier ? modifier(responseInit) : responseInit; // Create the new response from the body stream and `ResponseInit`\n            // modifications. Note: not all browsers support the Response.body stream,\n            // so fall back to reading the entire body into memory as a blob.\n            if (!canConstructResponseFromBodyStream()) {\n              _context.next = 7;\n              break;\n            }\n            _context.t0 = clonedResponse.body;\n            _context.next = 10;\n            break;\n          case 7:\n            _context.next = 9;\n            return clonedResponse.blob();\n          case 9:\n            _context.t0 = _context.sent;\n          case 10:\n            body = _context.t0;\n            return _context.abrupt(\"return\", new Response(body, modifiedResponseInit));\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _copyResponse.apply(this, arguments);\n}\nexport { copyResponse };","map":{"version":3,"names":["canConstructResponseFromBodyStream","copyResponse","response","modifier","clonedResponse","clone","responseInit","headers","Headers","status","statusText","modifiedResponseInit","body","blob","Response"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/workbox-core/copyResponse.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kCAAkC,QAAQ,kDAAkD;AACrG,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA,SAgBeC,YAAY;EAAA;AAAA;AAAA;EAAA,2EAA3B,iBAA4BC,QAAQ,EAAEC,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YACpCC,cAAc,GAAGF,QAAQ,CAACG,KAAK,EAAE,EACvC;YACMC,YAAY,GAAG;cACjBC,OAAO,EAAE,IAAIC,OAAO,CAACJ,cAAc,CAACG,OAAO,CAAC;cAC5CE,MAAM,EAAEL,cAAc,CAACK,MAAM;cAC7BC,UAAU,EAAEN,cAAc,CAACM;YAC/B,CAAC,EACD;YACMC,oBAAoB,GAAGR,QAAQ,GAAGA,QAAQ,CAACG,YAAY,CAAC,GAAGA,YAAY,EAC7E;YACA;YACA;YAAA,KACaN,kCAAkC,EAAE;cAAA;cAAA;YAAA;YAAA,cAC7CI,cAAc,CAACQ,IAAI;YAAA;YAAA;UAAA;YAAA;YAAA,OAASR,cAAc,CAACS,IAAI,EAAE;UAAA;YAAA;UAAA;YAD/CD,IAAI;YAAA,iCAEH,IAAIE,QAAQ,CAACF,IAAI,EAAED,oBAAoB,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAClD;EAAA;AAAA;AACD,SAASV,YAAY"},"metadata":{},"sourceType":"module"}