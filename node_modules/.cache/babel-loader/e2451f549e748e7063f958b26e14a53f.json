{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { calcPositionFromSize, getRandom, getRangeMax, getRangeMin, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n    this.container = container;\n    this._engine = engine;\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager(this._engine, container);\n    var canvasSize = this.container.canvas.size;\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = this._engine.plugins.getMovers(container, true);\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n        options = container.actualOptions;\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group, initializer) {\n      var container = this.container,\n        options = container.actualOptions,\n        limit = options.particles.number.limit;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.array = [];\n      this.zArray = [];\n      this.movers = [];\n      this.updaters = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(delta) {\n        var container, canvasSize, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, p;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context.next = 5;\n                return this.update(delta);\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n                _iterator3 = _createForOfIteratorHelper(this.zArray);\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    p = _step3.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function draw(_x) {\n        return _draw.apply(this, arguments);\n      }\n      return draw;\n    }()\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = setRangeValue(p1.id, p2.id),\n        key = \"\".concat(getRangeMin(range), \"_\").concat(getRangeMax(range));\n      var res = this.freqs.links.get(key);\n      if (res === undefined) {\n        res = getRandom();\n        this.freqs.links.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n        id1 = _ref[0],\n        id2 = _ref[1],\n        id3 = _ref[2];\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n      if (res === undefined) {\n        res = getRandom();\n        this.freqs.triangles.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n      var container = this.container,\n        options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = this._engine.plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this.interactionManager.init();\n      var _iterator5 = _createForOfIteratorHelper(container.pathGenerators),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n            pathGenerator = _step5$value[1];\n          pathGenerator.init(container);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      this.addManualParticles();\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context2.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n      return redraw;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n      var deleted = 0;\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n        this._engine.dispatchEvent(\"particleRemoved\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n      for (var group in options.particles.groups) {\n        this._applyDensity(options.particles.groups[group], 0, group);\n      }\n      this._applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var _a, _b, container, particlesToDelete, _iterator6, _step6, _step6$value, pathGenerator, _iterator7, _step7, _step7$value, plugin, _iterator8, _step8, _particle, resizeFactor, _iterator10, _step10, _step10$value, _plugin, _iterator11, _step11, mover, _i2, _particlesToDelete, particle, _iterator9, _step9, _particle2, _iterator12, _step12, updater;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                _iterator6 = _createForOfIteratorHelper(container.pathGenerators);\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    _step6$value = _slicedToArray(_step6.value, 2), pathGenerator = _step6$value[1];\n                    pathGenerator.update();\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n                _iterator7 = _createForOfIteratorHelper(container.plugins);\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    _step7$value = _slicedToArray(_step7.value, 2), plugin = _step7$value[1];\n                    (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n                _iterator8 = _createForOfIteratorHelper(this.array);\n                _context3.prev = 6;\n                _iterator8.s();\n              case 8:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context3.next = 41;\n                  break;\n                }\n                _particle = _step8.value;\n                resizeFactor = container.canvas.resizeFactor;\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                }\n                _particle.ignoresResizeRatio = false;\n                _context3.next = 15;\n                return this.interactionManager.reset(_particle);\n              case 15:\n                _iterator10 = _createForOfIteratorHelper(this.container.plugins);\n                _context3.prev = 16;\n                _iterator10.s();\n              case 18:\n                if ((_step10 = _iterator10.n()).done) {\n                  _context3.next = 25;\n                  break;\n                }\n                _step10$value = _slicedToArray(_step10.value, 2), _plugin = _step10$value[1];\n                if (!_particle.destroyed) {\n                  _context3.next = 22;\n                  break;\n                }\n                return _context3.abrupt(\"break\", 25);\n              case 22:\n                (_b = _plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(_plugin, _particle, delta);\n              case 23:\n                _context3.next = 18;\n                break;\n              case 25:\n                _context3.next = 30;\n                break;\n              case 27:\n                _context3.prev = 27;\n                _context3.t0 = _context3[\"catch\"](16);\n                _iterator10.e(_context3.t0);\n              case 30:\n                _context3.prev = 30;\n                _iterator10.f();\n                return _context3.finish(30);\n              case 33:\n                _iterator11 = _createForOfIteratorHelper(this.movers);\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    mover = _step11.value;\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n                if (!_particle.destroyed) {\n                  _context3.next = 38;\n                  break;\n                }\n                particlesToDelete.push(_particle);\n                return _context3.abrupt(\"continue\", 39);\n              case 38:\n                this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n              case 39:\n                _context3.next = 8;\n                break;\n              case 41:\n                _context3.next = 46;\n                break;\n              case 43:\n                _context3.prev = 43;\n                _context3.t1 = _context3[\"catch\"](6);\n                _iterator8.e(_context3.t1);\n              case 46:\n                _context3.prev = 46;\n                _iterator8.f();\n                return _context3.finish(46);\n              case 49:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n                _context3.next = 52;\n                return this.interactionManager.externalInteract(delta);\n              case 52:\n                _iterator9 = _createForOfIteratorHelper(container.particles.array);\n                _context3.prev = 53;\n                _iterator9.s();\n              case 55:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context3.next = 64;\n                  break;\n                }\n                _particle2 = _step9.value;\n                _iterator12 = _createForOfIteratorHelper(this.updaters);\n                try {\n                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                    updater = _step12.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator12.e(err);\n                } finally {\n                  _iterator12.f();\n                }\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context3.next = 62;\n                  break;\n                }\n                _context3.next = 62;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n              case 62:\n                _context3.next = 55;\n                break;\n              case 64:\n                _context3.next = 69;\n                break;\n              case 66:\n                _context3.prev = 66;\n                _context3.t2 = _context3[\"catch\"](53);\n                _iterator9.e(_context3.t2);\n              case 69:\n                _context3.prev = 69;\n                _iterator9.f();\n                return _context3.finish(69);\n              case 72:\n                delete container.canvas.resizeFactor;\n              case 73:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 43, 46, 49], [16, 27, 30, 33], [53, 66, 69, 72]]);\n      }));\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }, {\n    key: \"_applyDensity\",\n    value: function _applyDensity(options, manualCount, group) {\n      var _a;\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n      var numberOptions = options.number,\n        densityFactor = this._initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(this.count, this.array.filter(function (t) {\n          return t.group === group;\n        }).length);\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"_initDensityFactor\",\n    value: function _initDensityFactor(densityOptions) {\n      var container = this.container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"_pushParticle\",\n    value: function _pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n        this._engine.dispatchEvent(\"particleAdded\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n  return Particles;\n}();","map":{"version":3,"names":["calcPositionFromSize","getRandom","getRangeMax","getRangeMin","setRangeValue","InteractionManager","Particle","Point","QuadTree","Rectangle","Particles","engine","container","_engine","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","canvasSize","canvas","size","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","length","options","actualOptions","manualParticles","particle","addParticle","position","overrideOptions","group","initializer","particles","number","countToRemove","count","removeQuantity","_pushParticle","delta","clear","update","sort","a","b","z","id","plugin","drawPlugin","p","draw","p1","p2","range","key","res","get","undefined","set","p3","id1","id2","id3","mode","handleClickMode","_a","handled","init","particlesInitialization","pathGenerators","pathGenerator","addManualParticles","groups","groupOptions","i","j","value","nb","mouse","pushing","factor","override","removeAt","indexOf","index","quantity","deleted","destroy","splice","zIdx","dispatchEvent","data","_applyDensity","particlesToDelete","call","resizeFactor","ignoresResizeRatio","x","y","reset","destroyed","_b","particleUpdate","mover","isEnabled","move","push","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","manualCount","density","enable","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","Math","min","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","canAdd","e","console","warn"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/tsparticles-engine/esm/Core/Particles.js"],"sourcesContent":["import { calcPositionFromSize, getRandom, getRangeMax, getRangeMin, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}