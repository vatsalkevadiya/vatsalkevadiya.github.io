{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport var validTypes = [\"text\", \"character\", \"char\"];\nexport var TextDrawer = /*#__PURE__*/function () {\n  function TextDrawer() {\n    _classCallCheck(this, TextDrawer);\n  }\n  _createClass(TextDrawer, [{\n    key: \"draw\",\n    value: function draw(context, particle, radius, opacity) {\n      var _a, _b, _c;\n      var character = particle.shapeData;\n      if (character === undefined) {\n        return;\n      }\n      var textData = character.value;\n      if (textData === undefined) {\n        return;\n      }\n      var textParticle = particle;\n      if (textParticle.text === undefined) {\n        textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n      }\n      var text = textParticle.text,\n        style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\",\n        weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\",\n        size = Math.round(radius) * 2,\n        font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\",\n        fill = particle.fill,\n        offsetX = text.length * radius / 2;\n      context.font = \"\".concat(style, \" \").concat(weight, \" \").concat(size, \"px \\\"\").concat(font, \"\\\"\");\n      var pos = {\n        x: -offsetX,\n        y: radius / 2\n      };\n      context.globalAlpha = opacity;\n      if (fill) {\n        context.fillText(text, pos.x, pos.y);\n      } else {\n        context.strokeText(text, pos.x, pos.y);\n      }\n      context.globalAlpha = 1;\n    }\n  }, {\n    key: \"getSidesCount\",\n    value: function getSidesCount() {\n      return 12;\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(container) {\n        var options, shapeOptions, promises;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = container.actualOptions;\n                if (!validTypes.find(function (t) {\n                  return isInArray(t, options.particles.shape.type);\n                })) {\n                  _context.next = 6;\n                  break;\n                }\n                shapeOptions = validTypes.map(function (t) {\n                  return options.particles.shape.options[t];\n                }).find(function (t) {\n                  return !!t;\n                }), promises = [];\n                executeOnSingleOrMultiple(shapeOptions, function (shape) {\n                  promises.push(loadFont(shape.font, shape.weight));\n                });\n                _context.next = 6;\n                return Promise.all(promises);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }]);\n  return TextDrawer;\n}();","map":{"version":3,"names":["executeOnSingleOrMultiple","isInArray","itemFromSingleOrMultiple","loadFont","validTypes","TextDrawer","context","particle","radius","opacity","_a","_b","_c","character","shapeData","undefined","textData","value","textParticle","text","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","pos","x","y","globalAlpha","fillText","strokeText","container","options","actualOptions","find","t","particles","shape","type","shapeOptions","map","promises","push","Promise","all"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-shape-text/esm/TextDrawer.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n"],"mappings":";;;;AAAA,SAASA,yBAAyB,EAAEC,SAAS,EAAEC,wBAAwB,EAAEC,QAAQ,QAAQ,oBAAoB;AAC7G,OAAO,IAAMC,UAAU,GAAG,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,CAAC;AACvD,WAAaC,UAAU;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACnB,cAAKC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAE;MACrC,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACd,IAAMC,SAAS,GAAGN,QAAQ,CAACO,SAAS;MACpC,IAAID,SAAS,KAAKE,SAAS,EAAE;QACzB;MACJ;MACA,IAAMC,QAAQ,GAAGH,SAAS,CAACI,KAAK;MAChC,IAAID,QAAQ,KAAKD,SAAS,EAAE;QACxB;MACJ;MACA,IAAMG,YAAY,GAAGX,QAAQ;MAC7B,IAAIW,YAAY,CAACC,IAAI,KAAKJ,SAAS,EAAE;QACjCG,YAAY,CAACC,IAAI,GAAGjB,wBAAwB,CAACc,QAAQ,EAAET,QAAQ,CAACa,eAAe,CAAC;MACpF;MACA,IAAMD,IAAI,GAAGD,YAAY,CAACC,IAAI;QAAEE,KAAK,GAAG,CAACX,EAAE,GAAGG,SAAS,CAACQ,KAAK,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;QAAEY,MAAM,GAAG,CAACX,EAAE,GAAGE,SAAS,CAACS,MAAM,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;QAAEY,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACjB,MAAM,CAAC,GAAG,CAAC;QAAEkB,IAAI,GAAG,CAACd,EAAE,GAAGC,SAAS,CAACa,IAAI,MAAM,IAAI,IAAId,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,SAAS;QAAEe,IAAI,GAAGpB,QAAQ,CAACoB,IAAI;QAAEC,OAAO,GAAIT,IAAI,CAACU,MAAM,GAAGrB,MAAM,GAAI,CAAC;MAC/UF,OAAO,CAACoB,IAAI,aAAML,KAAK,cAAIC,MAAM,cAAIC,IAAI,kBAAOG,IAAI,OAAG;MACvD,IAAMI,GAAG,GAAG;QACRC,CAAC,EAAE,CAACH,OAAO;QACXI,CAAC,EAAExB,MAAM,GAAG;MAChB,CAAC;MACDF,OAAO,CAAC2B,WAAW,GAAGxB,OAAO;MAC7B,IAAIkB,IAAI,EAAE;QACNrB,OAAO,CAAC4B,QAAQ,CAACf,IAAI,EAAEW,GAAG,CAACC,CAAC,EAAED,GAAG,CAACE,CAAC,CAAC;MACxC,CAAC,MACI;QACD1B,OAAO,CAAC6B,UAAU,CAAChB,IAAI,EAAEW,GAAG,CAACC,CAAC,EAAED,GAAG,CAACE,CAAC,CAAC;MAC1C;MACA1B,OAAO,CAAC2B,WAAW,GAAG,CAAC;IAC3B;EAAC;IAAA;IAAA,OACD,yBAAgB;MACZ,OAAO,EAAE;IACb;EAAC;IAAA;IAAA;MAAA,uEACD,iBAAWG,SAAS;QAAA;QAAA;UAAA;YAAA;cAAA;gBACVC,OAAO,GAAGD,SAAS,CAACE,aAAa;gBAAA,KACnClC,UAAU,CAACmC,IAAI,CAAC,UAACC,CAAC;kBAAA,OAAKvC,SAAS,CAACuC,CAAC,EAAEH,OAAO,CAACI,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC;gBAAA,EAAC;kBAAA;kBAAA;gBAAA;gBAC5DC,YAAY,GAAGxC,UAAU,CAC1ByC,GAAG,CAAC,UAACL,CAAC;kBAAA,OAAKH,OAAO,CAACI,SAAS,CAACC,KAAK,CAACL,OAAO,CAACG,CAAC,CAAC;gBAAA,EAAC,CAC9CD,IAAI,CAAC,UAACC,CAAC;kBAAA,OAAK,CAAC,CAACA,CAAC;gBAAA,EAAC,EAAEM,QAAQ,GAAG,EAAE;gBACpC9C,yBAAyB,CAAC4C,YAAY,EAAE,UAACF,KAAK,EAAK;kBAC/CI,QAAQ,CAACC,IAAI,CAAC5C,QAAQ,CAACuC,KAAK,CAAChB,IAAI,EAAEgB,KAAK,CAACpB,MAAM,CAAC,CAAC;gBACrD,CAAC,CAAC;gBAAC;gBAAA,OACG0B,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAElC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}