{"ast":null,"code":"import _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRandom } from \"tsparticles-engine\";\nexport var CircleShape = /*#__PURE__*/function () {\n  function CircleShape() {\n    _classCallCheck(this, CircleShape);\n  }\n  _createClass(CircleShape, [{\n    key: \"randomPosition\",\n    value: function randomPosition(position, size, fill) {\n      var generateTheta = function generateTheta(x, y) {\n          var u = getRandom() / 4.0,\n            theta = Math.atan(y / x * Math.tan(2 * Math.PI * u)),\n            v = getRandom();\n          if (v < 0.25) {\n            return theta;\n          } else if (v < 0.5) {\n            return Math.PI - theta;\n          } else if (v < 0.75) {\n            return Math.PI + theta;\n          } else {\n            return -theta;\n          }\n        },\n        radius = function radius(x, y, theta) {\n          return x * y / Math.sqrt(Math.pow(y * Math.cos(theta), 2) + Math.pow(x * Math.sin(theta), 2));\n        },\n        a = size.width / 2,\n        b = size.height / 2,\n        randomTheta = generateTheta(a, b),\n        maxRadius = radius(a, b, randomTheta),\n        randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n      return {\n        x: position.x + randomRadius * Math.cos(randomTheta),\n        y: position.y + randomRadius * Math.sin(randomTheta)\n      };\n    }\n  }]);\n  return CircleShape;\n}();","map":{"version":3,"names":["getRandom","CircleShape","position","size","fill","generateTheta","x","y","u","theta","Math","atan","tan","PI","v","radius","sqrt","cos","sin","a","width","b","height","randomTheta","maxRadius","randomRadius"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js"],"sourcesContent":["import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,WAAaC,WAAW;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACpB,wBAAeC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,EAAE;MAC3B,IAAAC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,CAAC,EAAEC,CAAC,EAAK;UAC5B,IAAMC,CAAC,GAAGR,SAAS,EAAE,GAAG,GAAG;YAAES,KAAK,GAAGC,IAAI,CAACC,IAAI,CAAEJ,CAAC,GAAGD,CAAC,GAAII,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGF,IAAI,CAACG,EAAE,GAAGL,CAAC,CAAC,CAAC;YAAEM,CAAC,GAAGd,SAAS,EAAE;UACpG,IAAIc,CAAC,GAAG,IAAI,EAAE;YACV,OAAOL,KAAK;UAChB,CAAC,MACI,IAAIK,CAAC,GAAG,GAAG,EAAE;YACd,OAAOJ,IAAI,CAACG,EAAE,GAAGJ,KAAK;UAC1B,CAAC,MACI,IAAIK,CAAC,GAAG,IAAI,EAAE;YACf,OAAOJ,IAAI,CAACG,EAAE,GAAGJ,KAAK;UAC1B,CAAC,MACI;YACD,OAAO,CAACA,KAAK;UACjB;QACJ,CAAC;QAAEM,MAAM,GAAG,SAATA,MAAM,CAAIT,CAAC,EAAEC,CAAC,EAAEE,KAAK;UAAA,OAAMH,CAAC,GAAGC,CAAC,GAAIG,IAAI,CAACM,IAAI,CAAC,SAACT,CAAC,GAAGG,IAAI,CAACO,GAAG,CAACR,KAAK,CAAC,EAAK,CAAC,aAAIH,CAAC,GAAGI,IAAI,CAACQ,GAAG,CAACT,KAAK,CAAC,EAAK,CAAC,EAAC;QAAA;QAAGU,CAAC,GAAQhB,IAAI,CAACiB,KAAK,GAAG,CAAC;QAApBC,CAAC,GAAqBlB,IAAI,CAACmB,MAAM,GAAG,CAAC;QAAGC,WAAW,GAAGlB,aAAa,CAACc,CAAC,EAAEE,CAAC,CAAC;QAAEG,SAAS,GAAGT,MAAM,CAACI,CAAC,EAAEE,CAAC,EAAEE,WAAW,CAAC;QAAEE,YAAY,GAAGrB,IAAI,GAAGoB,SAAS,GAAGd,IAAI,CAACM,IAAI,CAAChB,SAAS,EAAE,CAAC,GAAGwB,SAAS;MACrS,OAAO;QACHlB,CAAC,EAAEJ,QAAQ,CAACI,CAAC,GAAGmB,YAAY,GAAGf,IAAI,CAACO,GAAG,CAACM,WAAW,CAAC;QACpDhB,CAAC,EAAEL,QAAQ,CAACK,CAAC,GAAGkB,YAAY,GAAGf,IAAI,CAACQ,GAAG,CAACK,WAAW;MACvD,CAAC;IACL;EAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}