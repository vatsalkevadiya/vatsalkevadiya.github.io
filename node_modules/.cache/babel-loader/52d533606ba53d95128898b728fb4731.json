{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nvar EmittersPlugin = /*#__PURE__*/function () {\n  function EmittersPlugin(engine) {\n    _classCallCheck(this, EmittersPlugin);\n    this._engine = engine;\n    this.id = \"emitters\";\n  }\n  _createClass(EmittersPlugin, [{\n    key: \"getPlugin\",\n    value: function getPlugin(container) {\n      return new Emitters(this._engine, container);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, source) {\n      var _a, _b, _c, _d, _e, _f;\n      if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n        return;\n      }\n      var optionsCast = options;\n      optionsCast.emitters = executeOnSingleOrMultiple(source === null || source === void 0 ? void 0 : source.emitters, function (emitter) {\n        var tmp = new Emitter();\n        tmp.load(emitter);\n        return tmp;\n      });\n      var interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          optionsCast.interactivity.modes.emitters = {\n            random: {\n              count: 1,\n              enable: true\n            },\n            value: interactivityEmitters.map(function (s) {\n              var tmp = new Emitter();\n              tmp.load(s);\n              return tmp;\n            })\n          };\n        } else {\n          var emitterMode = interactivityEmitters;\n          if (emitterMode.value !== undefined) {\n            if (emitterMode.value instanceof Array) {\n              optionsCast.interactivity.modes.emitters = {\n                random: {\n                  count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                  enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false\n                },\n                value: emitterMode.value.map(function (s) {\n                  var tmp = new Emitter();\n                  tmp.load(s);\n                  return tmp;\n                })\n              };\n            } else {\n              var tmp = new Emitter();\n              tmp.load(emitterMode.value);\n              optionsCast.interactivity.modes.emitters = {\n                random: {\n                  count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                  enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false\n                },\n                value: tmp\n              };\n            }\n          } else {\n            var emitterOptions = optionsCast.interactivity.modes.emitters = {\n              random: {\n                count: 1,\n                enable: false\n              },\n              value: new Emitter()\n            };\n            emitterOptions.value.load(interactivityEmitters);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"needsPlugin\",\n    value: function needsPlugin(options) {\n      var _a, _b, _c;\n      if (!options) {\n        return false;\n      }\n      var emitters = options.emitters;\n      return emitters instanceof Array && !!emitters.length || emitters !== undefined || !!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && isInArray(\"emitter\", options.interactivity.events.onClick.mode);\n    }\n  }]);\n  return EmittersPlugin;\n}();\nexport function loadEmittersPlugin(_x) {\n  return _loadEmittersPlugin.apply(this, arguments);\n}\nfunction _loadEmittersPlugin() {\n  _loadEmittersPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine) {\n    var plugin;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!engine.emitterShapeManager) {\n              engine.emitterShapeManager = new ShapeManager(engine);\n            }\n            if (!engine.addEmitterShape) {\n              engine.addEmitterShape = function (name, shape) {\n                var _a;\n                (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n              };\n            }\n            plugin = new EmittersPlugin(engine);\n            _context.next = 5;\n            return engine.addPlugin(plugin);\n          case 5:\n            engine.addEmitterShape(\"circle\", new CircleShape());\n            engine.addEmitterShape(\"square\", new SquareShape());\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadEmittersPlugin.apply(this, arguments);\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\nexport * from \"./Options/Interfaces/IEmitterOptions\";","map":{"version":3,"names":["executeOnSingleOrMultiple","isInArray","CircleShape","Emitter","Emitters","ShapeManager","SquareShape","EmittersPlugin","engine","_engine","id","container","options","source","_a","_b","_c","_d","_e","_f","needsPlugin","optionsCast","emitters","emitter","tmp","load","interactivityEmitters","interactivity","modes","Array","random","count","enable","value","map","s","emitterMode","undefined","emitterOptions","length","events","onClick","mode","loadEmittersPlugin","emitterShapeManager","addEmitterShape","name","shape","addShape","plugin","addPlugin"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/tsparticles-plugin-emitters/esm/index.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        optionsCast.emitters = executeOnSingleOrMultiple(source === null || source === void 0 ? void 0 : source.emitters, (emitter) => {\n            const tmp = new Emitter();\n            tmp.load(emitter);\n            return tmp;\n        });\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                optionsCast.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        optionsCast.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        optionsCast.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (optionsCast.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\nexport * from \"./Options/Interfaces/IEmitterOptions\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}