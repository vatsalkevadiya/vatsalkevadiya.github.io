{"ast":null,"code":"import _slicedToArray from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nvar fixOutMode = function fixOutMode(data) {\n  if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n    return;\n  }\n  if (data.coord > data.maxCoord - data.radius * 2) {\n    data.setCb(-data.radius);\n  } else if (data.coord < data.radius * 2) {\n    data.setCb(data.radius);\n  }\n};\nexport var Particle = /*#__PURE__*/function () {\n  function Particle(engine, id, container, position, overrideOptions, group) {\n    _classCallCheck(this, Particle);\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n    this.id = id;\n    this.container = container;\n    this.group = group;\n    this._engine = engine;\n    this.fill = true;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.rotation = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.outType = \"normal\";\n    this.ignoresResizeRatio = true;\n    var pxRatio = container.retina.pixelRatio,\n      mainOptions = container.actualOptions,\n      particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles),\n      shapeType = particlesOptions.shape.type,\n      reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        var overrideShapeType = overrideOptions.shape.type;\n        this.shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n      }\n      var shapeOptions = new Shape();\n      shapeOptions.load(overrideOptions.shape);\n      if (this.shape) {\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n      }\n    } else {\n      this.shapeData = this._loadShapeData(particlesOptions.shape, reduceDuplicates);\n    }\n    particlesOptions.load(overrideOptions);\n    particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n    this.interactivity = new Interactivity(engine, container);\n    this.interactivity.load(container.actualOptions.interactivity);\n    this.interactivity.load(particlesOptions.interactivity);\n    this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n    this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n    this.options = particlesOptions;\n    var pathOptions = this.options.move.path;\n    this.pathDelay = getValue(pathOptions.delay) * 1000;\n    if (pathOptions.generator) {\n      this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n      if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n        this.pathGenerator.init(container);\n      }\n    }\n    var zIndexValue = getRangeValue(this.options.zIndex.value);\n    container.retina.initParticle(this);\n    var sizeOptions = this.options.size,\n      sizeRange = sizeOptions.value,\n      sizeAnimation = sizeOptions.animation;\n    this.size = {\n      enable: sizeOptions.animation.enable,\n      value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n      max: getRangeMax(sizeRange) * pxRatio,\n      min: getRangeMin(sizeRange) * pxRatio,\n      loops: 0,\n      maxLoops: getRangeValue(sizeOptions.animation.count)\n    };\n    if (sizeAnimation.enable) {\n      this.size.status = 0;\n      this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n      switch (sizeAnimation.startValue) {\n        case \"min\":\n          this.size.value = this.size.min;\n          this.size.status = 0;\n          break;\n        case \"random\":\n          this.size.value = randomInRange(this.size) * pxRatio;\n          this.size.status = getRandom() >= 0.5 ? 0 : 1;\n          break;\n        case \"max\":\n        default:\n          this.size.value = this.size.max;\n          this.size.status = 1;\n          break;\n      }\n      this.size.velocity = ((_f = this.retina.sizeAnimationSpeed) !== null && _f !== void 0 ? _f : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= getRandom();\n      }\n    }\n    this.bubble = {\n      inRange: false\n    };\n    this.slow = {\n      inRange: false,\n      factor: 1\n    };\n    this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n    this.initialPosition = this.position.copy();\n    var canvasSize = container.canvas.size,\n      moveCenter = this.options.move.center,\n      isCenterPercent = moveCenter.mode === \"percent\";\n    this.moveCenter = {\n      x: ((_g = moveCenter.x) !== null && _g !== void 0 ? _g : 50) * (isCenterPercent ? canvasSize.width / 100 : 1),\n      y: ((_h = moveCenter.y) !== null && _h !== void 0 ? _h : 50) * (isCenterPercent ? canvasSize.height / 100 : 1),\n      radius: (_j = this.options.move.center.radius) !== null && _j !== void 0 ? _j : 0,\n      mode: (_k = this.options.move.center.mode) !== null && _k !== void 0 ? _k : \"percent\"\n    };\n    this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n    switch (this.options.move.direction) {\n      case \"inside\":\n        this.outType = \"inside\";\n        break;\n      case \"outside\":\n        this.outType = \"outside\";\n        break;\n    }\n    this.initialVelocity = this._calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n    this.offset = Vector.origin;\n    var particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    var drawer = container.drawers.get(this.shape);\n    if (!drawer) {\n      drawer = this._engine.plugins.getShapeDrawer(this.shape);\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n      drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n    }\n    var sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n    this.spawning = false;\n    this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n    var _iterator = _createForOfIteratorHelper(container.particles.updaters),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var updater = _step.value;\n        (_l = updater.init) === null || _l === void 0 ? void 0 : _l.call(updater, this);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var _iterator2 = _createForOfIteratorHelper(container.particles.movers),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var mover = _step2.value;\n        (_m = mover.init) === null || _m === void 0 ? void 0 : _m.call(mover, this);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n    var _iterator3 = _createForOfIteratorHelper(container.plugins),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _step3$value = _slicedToArray(_step3.value, 2),\n          plugin = _step3$value[1];\n        (_o = plugin.particleCreated) === null || _o === void 0 ? void 0 : _o.call(plugin, this);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  _createClass(Particle, [{\n    key: \"destroy\",\n    value: function destroy(override) {\n      if (this.unbreakable || this.destroyed) {\n        return;\n      }\n      this.destroyed = true;\n      this.bubble.inRange = false;\n      this.slow.inRange = false;\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (plugin.particleDestroyed) {\n            plugin.particleDestroyed(this, override);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      var _iterator5 = _createForOfIteratorHelper(this.container.particles.updaters),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var updater = _step5.value;\n          if (updater.particleDestroyed) {\n            updater.particleDestroyed(this, override);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      var container = this.container;\n      var _iterator6 = _createForOfIteratorHelper(container.plugins),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n            plugin = _step6$value[1];\n          container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      container.canvas.drawParticle(this, delta);\n    }\n  }, {\n    key: \"getFillColor\",\n    value: function getFillColor() {\n      var _a, _b;\n      var color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n      if (color && this.roll && (this.backColor || this.roll.alter)) {\n        var backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1,\n          backSum = this.roll.horizontal ? Math.PI / 2 : 0,\n          rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n        if (rolled) {\n          if (this.backColor) {\n            return this.backColor;\n          }\n          if (this.roll.alter) {\n            return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n          }\n        }\n      }\n      return color;\n    }\n  }, {\n    key: \"getMass\",\n    value: function getMass() {\n      return Math.pow(this.getRadius(), 2) * Math.PI / 2;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.position.x + this.offset.x,\n        y: this.position.y + this.offset.y,\n        z: this.position.z\n      };\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      var _a;\n      return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n  }, {\n    key: \"getStrokeColor\",\n    value: function getStrokeColor() {\n      var _a, _b;\n      return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n  }, {\n    key: \"isInsideCanvas\",\n    value: function isInsideCanvas() {\n      var radius = this.getRadius(),\n        canvasSize = this.container.canvas.size;\n      return this.position.x >= -radius && this.position.y >= -radius && this.position.y <= canvasSize.height + radius && this.position.x <= canvasSize.width + radius;\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.opacity) {\n        this.opacity.loops = 0;\n      }\n      this.size.loops = 0;\n    }\n  }, {\n    key: \"_calcPosition\",\n    value: function _calcPosition(container, position, zIndex) {\n      var tryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var _a, _b, _c, _d;\n      var _iterator7 = _createForOfIteratorHelper(container.plugins),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n            plugin = _step7$value[1];\n          var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n          if (pluginPos !== undefined) {\n            return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      var canvasSize = container.canvas.size,\n        exactPosition = calcExactPositionOrRandomFromSize({\n          size: canvasSize,\n          position: position\n        }),\n        pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n        radius = this.getRadius(),\n        outModes = this.options.move.outModes,\n        fixHorizontal = function fixHorizontal(outMode) {\n          fixOutMode({\n            outMode: outMode,\n            checkModes: [\"bounce\", \"bounce-horizontal\"],\n            coord: pos.x,\n            maxCoord: container.canvas.size.width,\n            setCb: function setCb(value) {\n              return pos.x += value;\n            },\n            radius: radius\n          });\n        },\n        fixVertical = function fixVertical(outMode) {\n          fixOutMode({\n            outMode: outMode,\n            checkModes: [\"bounce\", \"bounce-vertical\"],\n            coord: pos.y,\n            maxCoord: container.canvas.size.height,\n            setCb: function setCb(value) {\n              return pos.y += value;\n            },\n            radius: radius\n          });\n        };\n      fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n      fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n      fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n      fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n      if (this._checkOverlap(pos, tryCount)) {\n        return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n      }\n      return pos;\n    }\n  }, {\n    key: \"_calculateVelocity\",\n    value: function _calculateVelocity() {\n      var baseVelocity = getParticleBaseVelocity(this.direction);\n      var res = baseVelocity.copy();\n      var moveOptions = this.options.move;\n      if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n        return res;\n      }\n      var rad = Math.PI / 180 * getRangeValue(moveOptions.angle.value);\n      var radOffset = Math.PI / 180 * getRangeValue(moveOptions.angle.offset);\n      var range = {\n        left: radOffset - rad / 2,\n        right: radOffset + rad / 2\n      };\n      if (!moveOptions.straight) {\n        res.angle += randomInRange(setRangeValue(range.left, range.right));\n      }\n      if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n        res.length *= getRandom();\n      }\n      return res;\n    }\n  }, {\n    key: \"_checkOverlap\",\n    value: function _checkOverlap(pos) {\n      var tryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var collisionsOptions = this.options.collisions,\n        radius = this.getRadius();\n      if (!collisionsOptions.enable) {\n        return false;\n      }\n      var overlapOptions = collisionsOptions.overlap;\n      if (overlapOptions.enable) {\n        return false;\n      }\n      var retries = overlapOptions.retries;\n      if (retries >= 0 && tryCount > retries) {\n        throw new Error(\"Particle is overlapping and can't be placed\");\n      }\n      var overlaps = false;\n      var _iterator8 = _createForOfIteratorHelper(this.container.particles.array),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var particle = _step8.value;\n          if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n            overlaps = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      return overlaps;\n    }\n  }, {\n    key: \"_loadShapeData\",\n    value: function _loadShapeData(shapeOptions, reduceDuplicates) {\n      var shapeData = shapeOptions.options[this.shape];\n      if (shapeData) {\n        return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n      }\n    }\n  }]);\n  return Particle;\n}();","map":{"version":3,"names":["calcExactPositionOrRandomFromSize","clamp","getDistance","getParticleBaseVelocity","getParticleDirectionAngle","getRandom","getRangeMax","getRangeMin","getRangeValue","getValue","randomInRange","setRangeValue","deepExtend","isInArray","itemFromSingleOrMultiple","getHslFromAnimation","rangeColorToRgb","Interactivity","Shape","Vector","Vector3d","alterHsl","loadParticlesOptions","fixOutMode","data","outMode","checkModes","coord","maxCoord","radius","setCb","Particle","engine","id","container","position","overrideOptions","group","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_engine","fill","close","lastPathTime","destroyed","unbreakable","rotation","misplaced","retina","maxDistance","outType","ignoresResizeRatio","pxRatio","pixelRatio","mainOptions","actualOptions","particlesOptions","particles","shapeType","shape","type","reduceDuplicates","overrideShapeType","shapeOptions","load","shapeData","_loadShapeData","interactivity","options","pathOptions","move","path","pathDelay","delay","generator","pathGenerator","plugins","getPathGenerator","addPath","init","zIndexValue","zIndex","value","initParticle","sizeOptions","size","sizeRange","sizeAnimation","animation","enable","max","min","loops","maxLoops","count","status","decay","startValue","velocity","sizeAnimationSpeed","reduceFactor","sync","bubble","inRange","slow","factor","_calcPosition","zLayers","initialPosition","copy","canvasSize","canvas","moveCenter","center","isCenterPercent","mode","x","width","y","height","direction","initialVelocity","_calculateVelocity","moveDecay","offset","origin","needsSort","lastZIndex","z","zIndexFactor","sides","drawer","drawers","get","getShapeDrawer","set","loadShape","sideCountFunc","getSidesCount","spawning","shadowColor","shadow","color","updaters","updater","call","movers","mover","particleInit","plugin","particleCreated","override","particleDestroyed","delta","drawParticlePlugin","drawParticle","roll","backColor","alter","backFactor","horizontal","vertical","backSum","Math","PI","rolled","floor","angle","getRadius","strokeColor","getFillColor","isInsideCanvas","opacity","tryCount","pluginPos","particlePosition","undefined","create","exactPosition","pos","outModes","fixHorizontal","fixVertical","left","default","right","top","bottom","_checkOverlap","baseVelocity","res","moveOptions","rad","radOffset","range","straight","random","speed","length","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","overlaps","array","particle"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-engine/esm/Core/Particle.js"],"sourcesContent":["import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        this._engine = engine;\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            }\n            const shapeOptions = new Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this._loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_f = this.retina.sizeAnimationSpeed) !== null && _f !== void 0 ? _f : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= getRandom();\n            }\n        }\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = this.options.move.center, isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: ((_g = moveCenter.x) !== null && _g !== void 0 ? _g : 50) * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: ((_h = moveCenter.y) !== null && _h !== void 0 ? _h : 50) * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_j = this.options.move.center.radius) !== null && _j !== void 0 ? _j : 0,\n            mode: (_k = this.options.move.center.mode) !== null && _k !== void 0 ? _k : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            (_l = updater.init) === null || _l === void 0 ? void 0 : _l.call(updater, this);\n        }\n        for (const mover of container.particles.movers) {\n            (_m = mover.init) === null || _m === void 0 ? void 0 : _m.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_o = plugin.particleCreated) === null || _o === void 0 ? void 0 : _o.call(plugin, this);\n        }\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value);\n        const radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset);\n        const range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}