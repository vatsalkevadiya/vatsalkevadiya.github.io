{"ast":null,"code":"import _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport var BaseMover = /*#__PURE__*/function () {\n  function BaseMover() {\n    _classCallCheck(this, BaseMover);\n  }\n  _createClass(BaseMover, [{\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n      var container = particle.container,\n        options = particle.options,\n        gravityOptions = options.move.gravity,\n        spinOptions = options.move.spin;\n      particle.gravity = {\n        enable: gravityOptions.enable,\n        acceleration: getRangeValue(gravityOptions.acceleration),\n        inverse: gravityOptions.inverse\n      };\n      if (spinOptions.enable) {\n        var spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : {\n          x: 50,\n          y: 50\n        };\n        var spinCenter = {\n          x: spinPos.x / 100 * container.canvas.size.width,\n          y: spinPos.y / 100 * container.canvas.size.height\n        };\n        var pos = particle.getPosition();\n        var distance = getDistance(pos, spinCenter);\n        var spinAcceleration = getRangeValue(spinOptions.acceleration);\n        particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n        particle.spin = {\n          center: spinCenter,\n          direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n          angle: particle.velocity.angle,\n          radius: distance,\n          acceleration: particle.retina.spinAcceleration\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && particle.options.move.enable;\n    }\n  }, {\n    key: \"move\",\n    value: function move(particle, delta) {\n      var _a, _b, _c;\n      var _d, _e;\n      var particleOptions = particle.options,\n        moveOptions = particleOptions.move;\n      if (!moveOptions.enable) {\n        return;\n      }\n      var container = particle.container,\n        slowFactor = getProximitySpeedFactor(particle),\n        baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : _d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio) * container.retina.reduceFactor,\n        moveDrift = (_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : _e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio,\n        maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio,\n        sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1,\n        speedFactor = sizeFactor * slowFactor * (delta.factor || 1),\n        diffFactor = 2,\n        moveSpeed = baseSpeed * speedFactor / diffFactor;\n      if (moveOptions.spin.enable) {\n        spin(particle, moveSpeed);\n      } else {\n        applyPath(particle, delta);\n        var gravityOptions = particle.gravity,\n          gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n        if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n          particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n        }\n        if (moveDrift && moveSpeed) {\n          particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n        }\n        var decay = particle.moveDecay;\n        if (decay != 1) {\n          particle.velocity.multTo(decay);\n        }\n        var velocity = particle.velocity.mult(moveSpeed),\n          maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {\n          velocity.y = gravityFactor * maxSpeed;\n          if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n          }\n        }\n        var zIndexOptions = particle.options.zIndex,\n          zVelocityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.velocityRate);\n        if (zVelocityFactor != 1) {\n          velocity.multTo(zVelocityFactor);\n        }\n        particle.position.addTo(velocity);\n        if (moveOptions.vibrate) {\n          particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n          particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n      }\n      applyDistance(particle);\n    }\n  }]);\n  return BaseMover;\n}();","map":{"version":3,"names":["getDistance","getRangeMax","getRangeValue","applyDistance","applyPath","getProximitySpeedFactor","spin","BaseMover","particle","_a","container","options","gravityOptions","move","gravity","spinOptions","enable","acceleration","inverse","spinPos","position","x","y","spinCenter","canvas","size","width","height","pos","getPosition","distance","spinAcceleration","retina","pixelRatio","center","direction","velocity","angle","radius","destroyed","delta","_b","_c","_d","_e","particleOptions","moveOptions","slowFactor","baseSpeed","moveSpeed","speed","reduceFactor","moveDrift","drift","maxSize","value","sizeFactor","getRadius","speedFactor","factor","diffFactor","gravityFactor","decay","moveDecay","multTo","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","addTo","vibrate","Math","sin","cos"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-move-base/esm/BaseMover.js"],"sourcesContent":["import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 };\n            const spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            };\n            const pos = particle.getPosition();\n            const distance = getDistance(pos, spinCenter);\n            const spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,aAAa,QAAQ,oBAAoB;AAC5E,SAASC,aAAa,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,IAAI,QAAQ,SAAS;AACjF,WAAaC,SAAS;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAClB,cAAKC,QAAQ,EAAE;MACX,IAAIC,EAAE;MACN,IAAMC,SAAS,GAAGF,QAAQ,CAACE,SAAS;QAAEC,OAAO,GAAGH,QAAQ,CAACG,OAAO;QAAEC,cAAc,GAAGD,OAAO,CAACE,IAAI,CAACC,OAAO;QAAEC,WAAW,GAAGJ,OAAO,CAACE,IAAI,CAACP,IAAI;MACxIE,QAAQ,CAACM,OAAO,GAAG;QACfE,MAAM,EAAEJ,cAAc,CAACI,MAAM;QAC7BC,YAAY,EAAEf,aAAa,CAACU,cAAc,CAACK,YAAY,CAAC;QACxDC,OAAO,EAAEN,cAAc,CAACM;MAC5B,CAAC;MACD,IAAIH,WAAW,CAACC,MAAM,EAAE;QACpB,IAAMG,OAAO,GAAG,CAACV,EAAE,GAAGM,WAAW,CAACK,QAAQ,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG;UAAEY,CAAC,EAAE,EAAE;UAAEC,CAAC,EAAE;QAAG,CAAC;QAC7F,IAAMC,UAAU,GAAG;UACfF,CAAC,EAAGF,OAAO,CAACE,CAAC,GAAG,GAAG,GAAIX,SAAS,CAACc,MAAM,CAACC,IAAI,CAACC,KAAK;UAClDJ,CAAC,EAAGH,OAAO,CAACG,CAAC,GAAG,GAAG,GAAIZ,SAAS,CAACc,MAAM,CAACC,IAAI,CAACE;QACjD,CAAC;QACD,IAAMC,GAAG,GAAGpB,QAAQ,CAACqB,WAAW,EAAE;QAClC,IAAMC,QAAQ,GAAG9B,WAAW,CAAC4B,GAAG,EAAEL,UAAU,CAAC;QAC7C,IAAMQ,gBAAgB,GAAG7B,aAAa,CAACa,WAAW,CAACE,YAAY,CAAC;QAChET,QAAQ,CAACwB,MAAM,CAACD,gBAAgB,GAAGA,gBAAgB,GAAGrB,SAAS,CAACsB,MAAM,CAACC,UAAU;QACjFzB,QAAQ,CAACF,IAAI,GAAG;UACZ4B,MAAM,EAAEX,UAAU;UAClBY,SAAS,EAAE3B,QAAQ,CAAC4B,QAAQ,CAACf,CAAC,IAAI,CAAC,GAAG,WAAW,GAAG,mBAAmB;UACvEgB,KAAK,EAAE7B,QAAQ,CAAC4B,QAAQ,CAACC,KAAK;UAC9BC,MAAM,EAAER,QAAQ;UAChBb,YAAY,EAAET,QAAQ,CAACwB,MAAM,CAACD;QAClC,CAAC;MACL;IACJ;EAAC;IAAA;IAAA,OACD,mBAAUvB,QAAQ,EAAE;MAChB,OAAO,CAACA,QAAQ,CAAC+B,SAAS,IAAI/B,QAAQ,CAACG,OAAO,CAACE,IAAI,CAACG,MAAM;IAC9D;EAAC;IAAA;IAAA,OACD,cAAKR,QAAQ,EAAEgC,KAAK,EAAE;MAClB,IAAI/B,EAAE,EAAEgC,EAAE,EAAEC,EAAE;MACd,IAAIC,EAAE,EAAEC,EAAE;MACV,IAAMC,eAAe,GAAGrC,QAAQ,CAACG,OAAO;QAAEmC,WAAW,GAAGD,eAAe,CAAChC,IAAI;MAC5E,IAAI,CAACiC,WAAW,CAAC9B,MAAM,EAAE;QACrB;MACJ;MACA,IAAMN,SAAS,GAAGF,QAAQ,CAACE,SAAS;QAAEqC,UAAU,GAAG1C,uBAAuB,CAACG,QAAQ,CAAC;QAAEwC,SAAS,GAAG,CAAC,CAACvC,EAAE,GAAG,CAACkC,EAAE,GAAGnC,QAAQ,CAACwB,MAAM,EAAEiB,SAAS,MAAM,IAAI,IAAIxC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAIkC,EAAE,CAACM,SAAS,GAAG/C,aAAa,CAAC4C,WAAW,CAACI,KAAK,CAAC,GAAGxC,SAAS,CAACsB,MAAM,CAACC,UAAW,IACvPvB,SAAS,CAACsB,MAAM,CAACmB,YAAY;QAAEC,SAAS,GAAI,CAACX,EAAE,GAAG,CAACG,EAAE,GAAGpC,QAAQ,CAACwB,MAAM,EAAEoB,SAAS,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAIG,EAAE,CAACQ,SAAS,GAAGlD,aAAa,CAACM,QAAQ,CAACG,OAAO,CAACE,IAAI,CAACwC,KAAK,CAAC,GAAG3C,SAAS,CAACsB,MAAM,CAACC,UAAY;QAAEqB,OAAO,GAAGrD,WAAW,CAAC4C,eAAe,CAACpB,IAAI,CAAC8B,KAAK,CAAC,GAAG7C,SAAS,CAACsB,MAAM,CAACC,UAAU;QAAEuB,UAAU,GAAGV,WAAW,CAACrB,IAAI,GAAGjB,QAAQ,CAACiD,SAAS,EAAE,GAAGH,OAAO,GAAG,CAAC;QAAEI,WAAW,GAAGF,UAAU,GAAGT,UAAU,IAAIP,KAAK,CAACmB,MAAM,IAAI,CAAC,CAAC;QAAEC,UAAU,GAAG,CAAC;QAAEX,SAAS,GAAID,SAAS,GAAGU,WAAW,GAAIE,UAAU;MACze,IAAId,WAAW,CAACxC,IAAI,CAACU,MAAM,EAAE;QACzBV,IAAI,CAACE,QAAQ,EAAEyC,SAAS,CAAC;MAC7B,CAAC,MACI;QACD7C,SAAS,CAACI,QAAQ,EAAEgC,KAAK,CAAC;QAC1B,IAAM5B,cAAc,GAAGJ,QAAQ,CAACM,OAAO;UAAE+C,aAAa,GAAG,CAACjD,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACI,MAAM,KAAKJ,cAAc,CAACM,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC;QACnL,IAAI,CAACN,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACI,MAAM,KAAKiC,SAAS,EAAE;UACtGzC,QAAQ,CAAC4B,QAAQ,CAACd,CAAC,IACduC,aAAa,IAAIjD,cAAc,CAACK,YAAY,GAAGuB,KAAK,CAACmB,MAAM,CAAC,IAAK,EAAE,GAAGV,SAAS,CAAC;QACzF;QACA,IAAIG,SAAS,IAAIH,SAAS,EAAE;UACxBzC,QAAQ,CAAC4B,QAAQ,CAACf,CAAC,IAAK+B,SAAS,GAAGZ,KAAK,CAACmB,MAAM,IAAK,EAAE,GAAGV,SAAS,CAAC;QACxE;QACA,IAAMa,KAAK,GAAGtD,QAAQ,CAACuD,SAAS;QAChC,IAAID,KAAK,IAAI,CAAC,EAAE;UACZtD,QAAQ,CAAC4B,QAAQ,CAAC4B,MAAM,CAACF,KAAK,CAAC;QACnC;QACA,IAAM1B,QAAQ,GAAG5B,QAAQ,CAAC4B,QAAQ,CAAC6B,IAAI,CAAChB,SAAS,CAAC;UAAEiB,QAAQ,GAAG,CAACxB,EAAE,GAAGlC,QAAQ,CAACwB,MAAM,CAACkC,QAAQ,MAAM,IAAI,IAAIxB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGhC,SAAS,CAACsB,MAAM,CAACkC,QAAQ;QACzJ,IAAI,CAACtD,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACI,MAAM,KACtFkD,QAAQ,GAAG,CAAC,KACV,CAACtD,cAAc,CAACM,OAAO,IAAIkB,QAAQ,CAACd,CAAC,IAAI,CAAC,IAAIc,QAAQ,CAACd,CAAC,IAAI4C,QAAQ,IACjEtD,cAAc,CAACM,OAAO,IAAIkB,QAAQ,CAACd,CAAC,IAAI,CAAC,IAAIc,QAAQ,CAACd,CAAC,IAAI,CAAC4C,QAAS,CAAC,EAAE;UAC7E9B,QAAQ,CAACd,CAAC,GAAGuC,aAAa,GAAGK,QAAQ;UACrC,IAAIjB,SAAS,EAAE;YACXzC,QAAQ,CAAC4B,QAAQ,CAACd,CAAC,GAAGc,QAAQ,CAACd,CAAC,GAAG2B,SAAS;UAChD;QACJ;QACA,IAAMkB,aAAa,GAAG3D,QAAQ,CAACG,OAAO,CAACyD,MAAM;UAAEC,eAAe,YAAI,CAAC,GAAG7D,QAAQ,CAAC8D,YAAY,EAAKH,aAAa,CAACI,YAAY;QAC1H,IAAIF,eAAe,IAAI,CAAC,EAAE;UACtBjC,QAAQ,CAAC4B,MAAM,CAACK,eAAe,CAAC;QACpC;QACA7D,QAAQ,CAACY,QAAQ,CAACoD,KAAK,CAACpC,QAAQ,CAAC;QACjC,IAAIU,WAAW,CAAC2B,OAAO,EAAE;UACrBjE,QAAQ,CAACY,QAAQ,CAACC,CAAC,IAAIqD,IAAI,CAACC,GAAG,CAACnE,QAAQ,CAACY,QAAQ,CAACC,CAAC,GAAGqD,IAAI,CAACE,GAAG,CAACpE,QAAQ,CAACY,QAAQ,CAACE,CAAC,CAAC,CAAC;UACpFd,QAAQ,CAACY,QAAQ,CAACE,CAAC,IAAIoD,IAAI,CAACE,GAAG,CAACpE,QAAQ,CAACY,QAAQ,CAACE,CAAC,GAAGoD,IAAI,CAACC,GAAG,CAACnE,QAAQ,CAACY,QAAQ,CAACC,CAAC,CAAC,CAAC;QACxF;MACJ;MACAlB,aAAa,CAACK,QAAQ,CAAC;IAC3B;EAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}