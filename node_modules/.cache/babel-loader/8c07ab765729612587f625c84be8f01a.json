{"ast":null,"code":"import _toConsumableArray from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var Plugins = /*#__PURE__*/function () {\n  function Plugins(engine) {\n    _classCallCheck(this, Plugins);\n    this._engine = engine;\n    this.plugins = [];\n    this.interactorsInitializers = new Map();\n    this.moversInitializers = new Map();\n    this.updatersInitializers = new Map();\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.drawers = new Map();\n    this.pathGenerators = new Map();\n  }\n  _createClass(Plugins, [{\n    key: \"addInteractor\",\n    value: function addInteractor(name, initInteractor) {\n      this.interactorsInitializers.set(name, initInteractor);\n    }\n  }, {\n    key: \"addParticleMover\",\n    value: function addParticleMover(name, initMover) {\n      this.moversInitializers.set(name, initMover);\n    }\n  }, {\n    key: \"addParticleUpdater\",\n    value: function addParticleUpdater(name, initUpdater) {\n      this.updatersInitializers.set(name, initUpdater);\n    }\n  }, {\n    key: \"addPathGenerator\",\n    value: function addPathGenerator(type, pathGenerator) {\n      if (!this.getPathGenerator(type)) {\n        this.pathGenerators.set(type, pathGenerator);\n      }\n    }\n  }, {\n    key: \"addPlugin\",\n    value: function addPlugin(plugin) {\n      if (!this.getPlugin(plugin.id)) {\n        this.plugins.push(plugin);\n      }\n    }\n  }, {\n    key: \"addPreset\",\n    value: function addPreset(presetKey, options) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (override || !this.getPreset(presetKey)) {\n        this.presets.set(presetKey, options);\n      }\n    }\n  }, {\n    key: \"addShapeDrawer\",\n    value: function addShapeDrawer(type, drawer) {\n      if (!this.getShapeDrawer(type)) {\n        this.drawers.set(type, drawer);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(container) {\n      this.updaters.delete(container);\n      this.movers.delete(container);\n      this.interactors.delete(container);\n    }\n  }, {\n    key: \"getAvailablePlugins\",\n    value: function getAvailablePlugins(container) {\n      var res = new Map();\n      var _iterator = _createForOfIteratorHelper(this.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n          if (!plugin.needsPlugin(container.actualOptions)) {\n            continue;\n          }\n          res.set(plugin.id, plugin.getPlugin(container));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return res;\n    }\n  }, {\n    key: \"getInteractors\",\n    value: function getInteractors(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = this.interactors.get(container);\n      if (!res || force) {\n        res = _toConsumableArray(this.interactorsInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        this.interactors.set(container, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getMovers\",\n    value: function getMovers(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = this.movers.get(container);\n      if (!res || force) {\n        res = _toConsumableArray(this.moversInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        this.movers.set(container, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getPathGenerator\",\n    value: function getPathGenerator(type) {\n      return this.pathGenerators.get(type);\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(plugin) {\n      return this.plugins.find(function (t) {\n        return t.id === plugin;\n      });\n    }\n  }, {\n    key: \"getPreset\",\n    value: function getPreset(preset) {\n      return this.presets.get(preset);\n    }\n  }, {\n    key: \"getShapeDrawer\",\n    value: function getShapeDrawer(type) {\n      return this.drawers.get(type);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return this.drawers.keys();\n    }\n  }, {\n    key: \"getUpdaters\",\n    value: function getUpdaters(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = this.updaters.get(container);\n      if (!res || force) {\n        res = _toConsumableArray(this.updatersInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        this.updaters.set(container, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, sourceOptions) {\n      var _iterator2 = _createForOfIteratorHelper(this.plugins),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var plugin = _step2.value;\n          plugin.loadOptions(options, sourceOptions);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"loadParticlesOptions\",\n    value: function loadParticlesOptions(container, options) {\n      var updaters = this.updaters.get(container);\n      if (!updaters) {\n        return;\n      }\n      for (var _len = arguments.length, sourceOptions = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        sourceOptions[_key - 2] = arguments[_key];\n      }\n      var _iterator3 = _createForOfIteratorHelper(updaters),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n          if (updater.loadOptions) {\n            updater.loadOptions.apply(updater, [options].concat(sourceOptions));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n  return Plugins;\n}();","map":{"version":3,"names":["Plugins","engine","_engine","plugins","interactorsInitializers","Map","moversInitializers","updatersInitializers","interactors","movers","updaters","presets","drawers","pathGenerators","name","initInteractor","set","initMover","initUpdater","type","pathGenerator","getPathGenerator","plugin","getPlugin","id","push","presetKey","options","override","getPreset","drawer","getShapeDrawer","container","delete","res","needsPlugin","actualOptions","force","get","values","map","t","find","preset","keys","sourceOptions","loadOptions","updater"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js"],"sourcesContent":["export class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this.interactorsInitializers = new Map();\n        this.moversInitializers = new Map();\n        this.updatersInitializers = new Map();\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this.interactorsInitializers.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this.moversInitializers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this.updatersInitializers.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        let res = this.interactors.get(container);\n        if (!res || force) {\n            res = [...this.interactorsInitializers.values()].map((t) => t(container));\n            this.interactors.set(container, res);\n        }\n        return res;\n    }\n    getMovers(container, force = false) {\n        let res = this.movers.get(container);\n        if (!res || force) {\n            res = [...this.moversInitializers.values()].map((t) => t(container));\n            this.movers.set(container, res);\n        }\n        return res;\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        let res = this.updaters.get(container);\n        if (!res || force) {\n            res = [...this.updatersInitializers.values()].map((t) => t(container));\n            this.updaters.set(container, res);\n        }\n        return res;\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}