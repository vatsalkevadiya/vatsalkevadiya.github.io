{"ast":null,"code":"import _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n  var _a;\n  var wobble = particle.options.wobble;\n  if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n    return;\n  }\n  var angleSpeed = particle.wobble.angleSpeed * delta.factor,\n    moveSpeed = particle.wobble.moveSpeed * delta.factor,\n    distance = moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor) / (1000 / 60),\n    max = 2 * Math.PI;\n  particle.wobble.angle += angleSpeed;\n  if (particle.wobble.angle > max) {\n    particle.wobble.angle -= max;\n  }\n  particle.position.x += distance * Math.cos(particle.wobble.angle);\n  particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport var WobbleUpdater = /*#__PURE__*/function () {\n  function WobbleUpdater(container) {\n    _classCallCheck(this, WobbleUpdater);\n    this.container = container;\n  }\n  _createClass(WobbleUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n      var wobbleOpt = particle.options.wobble;\n      if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n        particle.wobble = {\n          angle: getRandom() * Math.PI * 2,\n          angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n          moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10\n        };\n      } else {\n        particle.wobble = {\n          angle: 0,\n          angleSpeed: 0,\n          moveSpeed: 0\n        };\n      }\n      particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a;\n      return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (!options.wobble) {\n        options.wobble = new Wobble();\n      }\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateWobble(particle, delta);\n    }\n  }]);\n  return WobbleUpdater;\n}();","map":{"version":3,"names":["getRandom","getRangeValue","Wobble","updateWobble","particle","delta","_a","wobble","options","enable","angleSpeed","factor","moveSpeed","distance","retina","wobbleDistance","max","Math","PI","angle","position","x","cos","y","abs","sin","WobbleUpdater","container","wobbleOpt","speed","move","pixelRatio","destroyed","spawning","sources","source","load","isEnabled"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}