{"ast":null,"code":"import _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport var DestroyUpdater = /*#__PURE__*/function () {\n  function DestroyUpdater(engine, container) {\n    _classCallCheck(this, DestroyUpdater);\n    this.engine = engine;\n    this.container = container;\n  }\n  _createClass(DestroyUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var container = this.container,\n        particlesOptions = particle.options,\n        destroyOptions = particlesOptions.destroy;\n      if (!destroyOptions) {\n        return;\n      }\n      particle.splitCount = 0;\n      var destroyBounds = destroyOptions.bounds;\n      if (!particle.destroyBounds) {\n        particle.destroyBounds = {};\n      }\n      if (destroyBounds.bottom) {\n        particle.destroyBounds.bottom = getRangeValue(destroyBounds.bottom) * container.canvas.size.height / 100;\n      }\n      if (destroyBounds.left) {\n        particle.destroyBounds.left = getRangeValue(destroyBounds.left) * container.canvas.size.width / 100;\n      }\n      if (destroyBounds.right) {\n        particle.destroyBounds.right = getRangeValue(destroyBounds.right) * container.canvas.size.width / 100;\n      }\n      if (destroyBounds.top) {\n        particle.destroyBounds.top = getRangeValue(destroyBounds.top) * container.canvas.size.height / 100;\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (!options.destroy) {\n        options.destroy = new Destroy();\n      }\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n      }\n    }\n  }, {\n    key: \"particleDestroyed\",\n    value: function particleDestroyed(particle, override) {\n      if (override) {\n        return;\n      }\n      var destroyOptions = particle.options.destroy;\n      if (destroyOptions && destroyOptions.mode === \"split\") {\n        this.split(particle);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      var position = particle.getPosition(),\n        bounds = particle.destroyBounds;\n      if (!bounds) {\n        return;\n      }\n      if (bounds.bottom !== undefined && position.y >= bounds.bottom || bounds.left !== undefined && position.x <= bounds.left || bounds.right !== undefined && position.x >= bounds.right || bounds.top !== undefined && position.y <= bounds.top) {\n        particle.destroy();\n      }\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent, splitParticlesOptions) {\n      var destroyOptions = parent.options.destroy;\n      if (!destroyOptions) {\n        return;\n      }\n      var splitOptions = destroyOptions.split,\n        options = loadParticlesOptions(this.engine, this.container, parent.options),\n        factor = getValue(splitOptions.factor);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n      options.move.load({\n        center: {\n          x: parent.position.x,\n          y: parent.position.y,\n          mode: \"precise\"\n        }\n      });\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n      options.load(splitParticlesOptions);\n      var offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0,\n        position = {\n          x: parent.position.x + randomInRange(offset),\n          y: parent.position.y + randomInRange(offset)\n        };\n      return this.container.particles.addParticle(position, options, parent.group, function (particle) {\n        var _a;\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"split\",\n    value: function split(particle) {\n      var destroyOptions = particle.options.destroy;\n      if (!destroyOptions) {\n        return;\n      }\n      var splitOptions = destroyOptions.split;\n      if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n      }\n      var rate = getValue(splitOptions.rate),\n        particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n      for (var i = 0; i < rate; i++) {\n        this.addSplitParticle(particle, particlesSplitOptions);\n      }\n    }\n  }]);\n  return DestroyUpdater;\n}();","map":{"version":3,"names":["getRangeValue","getValue","itemFromSingleOrMultiple","loadParticlesOptions","randomInRange","setRangeValue","Destroy","DestroyUpdater","engine","container","particle","particlesOptions","options","destroyOptions","destroy","splitCount","destroyBounds","bounds","bottom","canvas","size","height","left","width","right","top","destroyed","sources","source","load","override","mode","split","isEnabled","position","getPosition","undefined","y","x","parent","splitParticlesOptions","splitOptions","factor","color","value","hsl","getFillColor","move","center","min","max","offset","sizeOffset","particles","addParticle","group","_a","velocity","length","unbreakable","setTimeout","count","rate","particlesSplitOptions","i","addSplitParticle"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js"],"sourcesContent":["import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}