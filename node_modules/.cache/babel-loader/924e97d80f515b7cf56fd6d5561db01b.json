{"ast":null,"code":"import _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { PolygonMaskDraw } from \"./PolygonMaskDraw\";\nimport { PolygonMaskInline } from \"./PolygonMaskInline\";\nimport { PolygonMaskLocalSvg } from \"./PolygonMaskLocalSvg\";\nimport { PolygonMaskMove } from \"./PolygonMaskMove\";\nimport { deepExtend } from \"tsparticles-engine\";\nexport var PolygonMask = /*#__PURE__*/function () {\n  function PolygonMask() {\n    _classCallCheck(this, PolygonMask);\n    this.draw = new PolygonMaskDraw();\n    this.enable = false;\n    this.inline = new PolygonMaskInline();\n    this.move = new PolygonMaskMove();\n    this.scale = 1;\n    this.type = \"none\";\n  }\n  _createClass(PolygonMask, [{\n    key: \"inlineArrangement\",\n    get: function get() {\n      return this.inline.arrangement;\n    },\n    set: function set(value) {\n      this.inline.arrangement = value;\n    }\n  }, {\n    key: \"load\",\n    value: function load(data) {\n      if (!data) {\n        return;\n      }\n      this.draw.load(data.draw);\n      this.inline.load(data.inline);\n      this.move.load(data.move);\n      if (data.scale !== undefined) {\n        this.scale = data.scale;\n      }\n      if (data.type !== undefined) {\n        this.type = data.type;\n      }\n      if (data.enable !== undefined) {\n        this.enable = data.enable;\n      } else {\n        this.enable = this.type !== \"none\";\n      }\n      if (data.url !== undefined) {\n        this.url = data.url;\n      }\n      if (data.data !== undefined) {\n        if (typeof data.data === \"string\") {\n          this.data = data.data;\n        } else {\n          this.data = new PolygonMaskLocalSvg();\n          this.data.load(data.data);\n        }\n      }\n      if (data.position !== undefined) {\n        this.position = deepExtend({}, data.position);\n      }\n    }\n  }]);\n  return PolygonMask;\n}();","map":{"version":3,"names":["PolygonMaskDraw","PolygonMaskInline","PolygonMaskLocalSvg","PolygonMaskMove","deepExtend","PolygonMask","draw","enable","inline","move","scale","type","arrangement","value","data","load","undefined","url","position"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/React-Portfolio-master/node_modules/tsparticles-plugin-polygon-mask/esm/Options/Classes/PolygonMask.js"],"sourcesContent":["import { PolygonMaskDraw } from \"./PolygonMaskDraw\";\nimport { PolygonMaskInline } from \"./PolygonMaskInline\";\nimport { PolygonMaskLocalSvg } from \"./PolygonMaskLocalSvg\";\nimport { PolygonMaskMove } from \"./PolygonMaskMove\";\nimport { deepExtend } from \"tsparticles-engine\";\nexport class PolygonMask {\n    constructor() {\n        this.draw = new PolygonMaskDraw();\n        this.enable = false;\n        this.inline = new PolygonMaskInline();\n        this.move = new PolygonMaskMove();\n        this.scale = 1;\n        this.type = \"none\";\n    }\n    get inlineArrangement() {\n        return this.inline.arrangement;\n    }\n    set inlineArrangement(value) {\n        this.inline.arrangement = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.draw.load(data.draw);\n        this.inline.load(data.inline);\n        this.move.load(data.move);\n        if (data.scale !== undefined) {\n            this.scale = data.scale;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        else {\n            this.enable = this.type !== \"none\";\n        }\n        if (data.url !== undefined) {\n            this.url = data.url;\n        }\n        if (data.data !== undefined) {\n            if (typeof data.data === \"string\") {\n                this.data = data.data;\n            }\n            else {\n                this.data = new PolygonMaskLocalSvg();\n                this.data.load(data.data);\n            }\n        }\n        if (data.position !== undefined) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,WAAaC,WAAW;EACpB,uBAAc;IAAA;IACV,IAAI,CAACC,IAAI,GAAG,IAAIN,eAAe,EAAE;IACjC,IAAI,CAACO,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,MAAM,GAAG,IAAIP,iBAAiB,EAAE;IACrC,IAAI,CAACQ,IAAI,GAAG,IAAIN,eAAe,EAAE;IACjC,IAAI,CAACO,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,MAAM;EACtB;EAAC;IAAA;IAAA,KACD,eAAwB;MACpB,OAAO,IAAI,CAACH,MAAM,CAACI,WAAW;IAClC,CAAC;IAAA,KACD,aAAsBC,KAAK,EAAE;MACzB,IAAI,CAACL,MAAM,CAACI,WAAW,GAAGC,KAAK;IACnC;EAAC;IAAA;IAAA,OACD,cAAKC,IAAI,EAAE;MACP,IAAI,CAACA,IAAI,EAAE;QACP;MACJ;MACA,IAAI,CAACR,IAAI,CAACS,IAAI,CAACD,IAAI,CAACR,IAAI,CAAC;MACzB,IAAI,CAACE,MAAM,CAACO,IAAI,CAACD,IAAI,CAACN,MAAM,CAAC;MAC7B,IAAI,CAACC,IAAI,CAACM,IAAI,CAACD,IAAI,CAACL,IAAI,CAAC;MACzB,IAAIK,IAAI,CAACJ,KAAK,KAAKM,SAAS,EAAE;QAC1B,IAAI,CAACN,KAAK,GAAGI,IAAI,CAACJ,KAAK;MAC3B;MACA,IAAII,IAAI,CAACH,IAAI,KAAKK,SAAS,EAAE;QACzB,IAAI,CAACL,IAAI,GAAGG,IAAI,CAACH,IAAI;MACzB;MACA,IAAIG,IAAI,CAACP,MAAM,KAAKS,SAAS,EAAE;QAC3B,IAAI,CAACT,MAAM,GAAGO,IAAI,CAACP,MAAM;MAC7B,CAAC,MACI;QACD,IAAI,CAACA,MAAM,GAAG,IAAI,CAACI,IAAI,KAAK,MAAM;MACtC;MACA,IAAIG,IAAI,CAACG,GAAG,KAAKD,SAAS,EAAE;QACxB,IAAI,CAACC,GAAG,GAAGH,IAAI,CAACG,GAAG;MACvB;MACA,IAAIH,IAAI,CAACA,IAAI,KAAKE,SAAS,EAAE;QACzB,IAAI,OAAOF,IAAI,CAACA,IAAI,KAAK,QAAQ,EAAE;UAC/B,IAAI,CAACA,IAAI,GAAGA,IAAI,CAACA,IAAI;QACzB,CAAC,MACI;UACD,IAAI,CAACA,IAAI,GAAG,IAAIZ,mBAAmB,EAAE;UACrC,IAAI,CAACY,IAAI,CAACC,IAAI,CAACD,IAAI,CAACA,IAAI,CAAC;QAC7B;MACJ;MACA,IAAIA,IAAI,CAACI,QAAQ,KAAKF,SAAS,EAAE;QAC7B,IAAI,CAACE,QAAQ,GAAGd,UAAU,CAAC,CAAC,CAAC,EAAEU,IAAI,CAACI,QAAQ,CAAC;MACjD;IACJ;EAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}