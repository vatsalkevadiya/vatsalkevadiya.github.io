{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport var Collider = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Collider, _ParticlesInteractorB);\n  var _super = _createSuper(Collider);\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n    return _super.call(this, container);\n  }\n  _createClass(Collider, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(p1) {\n        var container, pos1, radius1, query, _iterator, _step, p2, pos2, radius2, dist, distP;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 2;\n                _iterator.s();\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 19;\n                  break;\n                }\n                p2 = _step.value;\n                if (!(p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning)) {\n                  _context.next = 8;\n                  break;\n                }\n                return _context.abrupt(\"continue\", 17);\n              case 8:\n                pos2 = p2.getPosition();\n                radius2 = p2.getRadius();\n                if (!(Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2)) {\n                  _context.next = 12;\n                  break;\n                }\n                return _context.abrupt(\"continue\", 17);\n              case 12:\n                dist = getDistance(pos1, pos2);\n                distP = radius1 + radius2;\n                if (!(dist > distP)) {\n                  _context.next = 16;\n                  break;\n                }\n                return _context.abrupt(\"continue\", 17);\n              case 16:\n                resolveCollision(p1, p2, container.fpsLimit / 1000, container.retina.pixelRatio);\n              case 17:\n                _context.next = 4;\n                break;\n              case 19:\n                _context.next = 24;\n                break;\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](2);\n                _iterator.e(_context.t0);\n              case 24:\n                _context.prev = 24;\n                _iterator.f();\n                return _context.finish(24);\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 21, 24, 27]]);\n      }));\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n  return Collider;\n}(ParticlesInteractorBase);","map":{"version":3,"names":["ParticlesInteractorBase","getDistance","resolveCollision","Collider","container","p1","pos1","getPosition","radius1","getRadius","query","particles","quadTree","queryCircle","p2","options","collisions","enable","mode","destroyed","spawning","pos2","radius2","Math","abs","round","z","dist","distP","fpsLimit","retina","pixelRatio","particle"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js"],"sourcesContent":["import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2);\n            const distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, container.fpsLimit / 1000, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,uBAAuB,EAAEC,WAAW,QAAQ,oBAAoB;AACzE,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,WAAaC,QAAQ;EAAA;EAAA;EACjB,kBAAYC,SAAS,EAAE;IAAA;IAAA,yBACbA,SAAS;EACnB;EAAC;IAAA;IAAA,OACD,iBAAQ,CACR;EAAC;IAAA;IAAA,OACD,gBAAO,CACP;EAAC;IAAA;IAAA;MAAA,2EACD,iBAAeC,EAAE;QAAA;QAAA;UAAA;YAAA;cAAA;gBACPD,SAAS,GAAG,IAAI,CAACA,SAAS,EAAEE,IAAI,GAAGD,EAAE,CAACE,WAAW,EAAE,EAAEC,OAAO,GAAGH,EAAE,CAACI,SAAS,EAAE,EAAEC,KAAK,GAAGN,SAAS,CAACO,SAAS,CAACC,QAAQ,CAACC,WAAW,CAACP,IAAI,EAAEE,OAAO,GAAG,CAAC,CAAC;gBAAA,uCACvIE,KAAK;gBAAA;gBAAA;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;gBAAXI,EAAE;gBAAA,MACLT,EAAE,KAAKS,EAAE,IACT,CAACA,EAAE,CAACC,OAAO,CAACC,UAAU,CAACC,MAAM,IAC7BZ,EAAE,CAACU,OAAO,CAACC,UAAU,CAACE,IAAI,KAAKJ,EAAE,CAACC,OAAO,CAACC,UAAU,CAACE,IAAI,IACzDJ,EAAE,CAACK,SAAS,IACZL,EAAE,CAACM,QAAQ;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAGTC,IAAI,GAAGP,EAAE,CAACP,WAAW,EAAE;gBACvBe,OAAO,GAAGR,EAAE,CAACL,SAAS,EAAE;gBAAA,MAC1Bc,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACnB,IAAI,CAACoB,CAAC,CAAC,GAAGH,IAAI,CAACE,KAAK,CAACJ,IAAI,CAACK,CAAC,CAAC,CAAC,GAAGlB,OAAO,GAAGc,OAAO;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAGnEK,IAAI,GAAG1B,WAAW,CAACK,IAAI,EAAEe,IAAI,CAAC;gBAC9BO,KAAK,GAAGpB,OAAO,GAAGc,OAAO;gBAAA,MAC3BK,IAAI,GAAGC,KAAK;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAGhB1B,gBAAgB,CAACG,EAAE,EAAES,EAAE,EAAEV,SAAS,CAACyB,QAAQ,GAAG,IAAI,EAAEzB,SAAS,CAAC0B,MAAM,CAACC,UAAU,CAAC;cAAC;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAExF;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OACD,mBAAUC,QAAQ,EAAE;MAChB,OAAOA,QAAQ,CAACjB,OAAO,CAACC,UAAU,CAACC,MAAM;IAC7C;EAAC;IAAA;IAAA,OACD,iBAAQ,CACR;EAAC;EAAA;AAAA,EAnCyBjB,uBAAuB"},"metadata":{},"sourceType":"module"}