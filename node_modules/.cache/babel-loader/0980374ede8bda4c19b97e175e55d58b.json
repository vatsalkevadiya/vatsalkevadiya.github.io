{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport var Attractor = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Attractor, _ParticlesInteractorB);\n  var _super = _createSuper(Attractor);\n  function Attractor(container) {\n    _classCallCheck(this, Attractor);\n    return _super.call(this, container);\n  }\n  _createClass(Attractor, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(p1) {\n        var _a, container, distance, pos1, query, _iterator, _step, p2, pos2, _getDistances, dx, dy, rotate, ax, ay, p1Factor, p2Factor;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 2;\n                _iterator.s();\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 15;\n                  break;\n                }\n                p2 = _step.value;\n                if (!(p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning)) {\n                  _context.next = 8;\n                  break;\n                }\n                return _context.abrupt(\"continue\", 13);\n              case 8:\n                pos2 = p2.getPosition(), _getDistances = getDistances(pos1, pos2), dx = _getDistances.dx, dy = _getDistances.dy, rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n                p1.velocity.x -= ax * p1Factor;\n                p1.velocity.y -= ay * p1Factor;\n                p2.velocity.x += ax * p2Factor;\n                p2.velocity.y += ay * p2Factor;\n              case 13:\n                _context.next = 4;\n                break;\n              case 15:\n                _context.next = 20;\n                break;\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](2);\n                _iterator.e(_context.t0);\n              case 20:\n                _context.prev = 20;\n                _iterator.f();\n                return _context.finish(20);\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 17, 20, 23]]);\n      }));\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.move.attract.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n  return Attractor;\n}(ParticlesInteractorBase);","map":{"version":3,"names":["ParticlesInteractorBase","getDistances","Attractor","container","p1","distance","_a","retina","attractDistance","pos1","getPosition","query","particles","quadTree","queryCircle","p2","options","move","attract","enable","destroyed","spawning","pos2","dx","dy","rotate","ax","x","ay","y","p1Factor","size","value","p2Factor","velocity","particle"],"sources":["C:/Users/vatsa/Downloads/React-Portfolio-master/Vatsal-Portfolio/node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js"],"sourcesContent":["import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,uBAAuB,EAAEC,YAAY,QAAQ,oBAAoB;AAC1E,WAAaC,SAAS;EAAA;EAAA;EAClB,mBAAYC,SAAS,EAAE;IAAA;IAAA,yBACbA,SAAS;EACnB;EAAC;IAAA;IAAA,OACD,iBAAQ,CACR;EAAC;IAAA;IAAA,OACD,gBAAO,CACP;EAAC;IAAA;IAAA;MAAA,2EACD,iBAAeC,EAAE;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEPD,SAAS,GAAG,IAAI,CAACA,SAAS,EAAEE,QAAQ,GAAG,CAACC,EAAE,GAAGF,EAAE,CAACG,MAAM,CAACC,eAAe,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGH,SAAS,CAACI,MAAM,CAACC,eAAe,EAAEC,IAAI,GAAGL,EAAE,CAACM,WAAW,EAAE,EAAEC,KAAK,GAAGR,SAAS,CAACS,SAAS,CAACC,QAAQ,CAACC,WAAW,CAACL,IAAI,EAAEJ,QAAQ,CAAC;gBAAA,uCACzNM,KAAK;gBAAA;gBAAA;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;gBAAXI,EAAE;gBAAA,MACLX,EAAE,KAAKW,EAAE,IAAI,CAACA,EAAE,CAACC,OAAO,CAACC,IAAI,CAACC,OAAO,CAACC,MAAM,IAAIJ,EAAE,CAACK,SAAS,IAAIL,EAAE,CAACM,QAAQ;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAGzEC,IAAI,GAAGP,EAAE,CAACL,WAAW,EAAE,kBAAeT,YAAY,CAACQ,IAAI,EAAEa,IAAI,CAAC,EAAnCC,EAAE,iBAAFA,EAAE,EAAEC,EAAE,iBAAFA,EAAE,EAA+BC,MAAM,GAAGrB,EAAE,CAACY,OAAO,CAACC,IAAI,CAACC,OAAO,CAACO,MAAM,EAAEC,EAAE,GAAGH,EAAE,IAAIE,MAAM,CAACE,CAAC,GAAG,IAAI,CAAC,EAAEC,EAAE,GAAGJ,EAAE,IAAIC,MAAM,CAACI,CAAC,GAAG,IAAI,CAAC,EAAEC,QAAQ,GAAGf,EAAE,CAACgB,IAAI,CAACC,KAAK,GAAG5B,EAAE,CAAC2B,IAAI,CAACC,KAAK,EAAEC,QAAQ,GAAG,CAAC,GAAGH,QAAQ;gBAC1O1B,EAAE,CAAC8B,QAAQ,CAACP,CAAC,IAAID,EAAE,GAAGI,QAAQ;gBAC9B1B,EAAE,CAAC8B,QAAQ,CAACL,CAAC,IAAID,EAAE,GAAGE,QAAQ;gBAC9Bf,EAAE,CAACmB,QAAQ,CAACP,CAAC,IAAID,EAAE,GAAGO,QAAQ;gBAC9BlB,EAAE,CAACmB,QAAQ,CAACL,CAAC,IAAID,EAAE,GAAGK,QAAQ;cAAC;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAEtC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OACD,mBAAUE,QAAQ,EAAE;MAChB,OAAOA,QAAQ,CAACnB,OAAO,CAACC,IAAI,CAACC,OAAO,CAACC,MAAM;IAC/C;EAAC;IAAA;IAAA,OACD,iBAAQ,CACR;EAAC;EAAA;AAAA,EA1B0BnB,uBAAuB"},"metadata":{},"sourceType":"module"}